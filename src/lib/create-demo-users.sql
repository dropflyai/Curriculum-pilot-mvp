-- Create Demo Users for CodeFly Black Cipher
-- Run this in your Supabase SQL Editor after running the main schema

-- ============= DEMO USER CREDENTIALS =============
-- Student Demo: demo.student@codefly.com / password: demo123
-- Teacher Demo: demo.teacher@codefly.com / password: demo123

-- First, insert auth users (you'll need to do this through Supabase Auth API or manually)
-- These are the users that need to be created in Supabase Auth:

-- STUDENT DEMO USER
-- Email: demo.student@codefly.com
-- Password: demo123
-- User ID will be generated by Supabase Auth

-- TEACHER DEMO USER  
-- Email: demo.teacher@codefly.com
-- Password: demo123
-- User ID will be generated by Supabase Auth

-- ============= CREATE PROFILE TRIGGER FUNCTION =============
-- This function will automatically create a profile when a new auth user signs up
CREATE OR REPLACE FUNCTION public.handle_new_user() 
RETURNS trigger AS $$
BEGIN
  INSERT INTO public.profiles (id, email, full_name, role)
  VALUES (
    NEW.id,
    NEW.email,
    COALESCE(NEW.raw_user_meta_data->>'full_name', NEW.email),
    COALESCE(NEW.raw_user_meta_data->>'role', 'student')
  );
  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Create trigger to automatically create profiles for new users
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();

-- ============= DEMO PROFILE DATA =============
-- These profiles will be created automatically when demo users sign up
-- But if you need to manually insert them after creating auth users:

/*
-- Replace these UUIDs with the actual UUIDs generated when you create the auth users
INSERT INTO public.profiles (id, email, full_name, codename, role, xp, level, badge_level, avatar_type)
VALUES 
  (
    'YOUR_STUDENT_UUID_HERE'::uuid,
    'demo.student@codefly.com',
    'Alex Phoenix',
    'Agent Phoenix',
    'student',
    0,
    1,
    'Recruit',
    'cyber-ninja'
  ),
  (
    'YOUR_TEACHER_UUID_HERE'::uuid,
    'demo.teacher@codefly.com',
    'Commander Atlas',
    'Commander Atlas',
    'teacher',
    5000,
    5,
    'Master Instructor',
    'tech-specialist'
  )
ON CONFLICT (id) DO NOTHING;
*/

-- ============= SAMPLE MISSION PROGRESS FOR DEMO STUDENT =============
-- This will give the demo student some progress to show off the system

/*
-- After creating the demo student, add some sample progress:
INSERT INTO public.mission_progress (user_id, mission_id, status, xp_earned, completed_weeks)
VALUES 
  (
    'YOUR_STUDENT_UUID_HERE'::uuid,
    'shadow-protocol',
    'in_progress',
    1250,
    ARRAY[1, 2]
  )
ON CONFLICT (user_id, mission_id) DO NOTHING;

-- Add some sample achievements
INSERT INTO public.achievements (user_id, badge_type, badge_name, description, xp_bonus)
VALUES 
  (
    'YOUR_STUDENT_UUID_HERE'::uuid,
    'first_login',
    'Welcome Agent',
    'Successfully joined the Black Cipher program',
    100
  ),
  (
    'YOUR_STUDENT_UUID_HERE'::uuid,
    'lesson_complete',
    'First Steps Complete',
    'Completed first Python lesson',
    50
  )
ON CONFLICT DO NOTHING;
*/

-- ============= INSTRUCTIONS =============
/*
To set up demo users:

1. Go to Supabase Dashboard > Authentication > Users
2. Create two new users manually:
   - Email: demo.student@codefly.com, Password: demo123
   - Email: demo.teacher@codefly.com, Password: demo123
3. Note down their UUIDs
4. Replace 'YOUR_STUDENT_UUID_HERE' and 'YOUR_TEACHER_UUID_HERE' in the commented sections above
5. Uncomment and run those sections to add profile data and sample progress

OR 

Use the Auth API to create users programmatically (recommended):
- The trigger function above will automatically create profiles
- Set user metadata during signup to specify role

The demo credentials will be:
- Student: demo.student@codefly.com / demo123
- Teacher: demo.teacher@codefly.com / demo123
*/