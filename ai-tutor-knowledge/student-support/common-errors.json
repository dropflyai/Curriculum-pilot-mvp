{
  "metadata": {
    "version": "1.0",
    "lastUpdated": "2025-08-20",
    "description": "Common Python errors with student-friendly explanations and solutions"
  },
  "errorPatterns": {
    "SyntaxError": {
      "frequency": 8,
      "severity": "medium",
      "studentFriendlyName": "Code Structure Problem",
      "analogy": "Like forgetting punctuation in a sentence - Python needs proper 'grammar' too!",
      "commonCauses": [
        "Missing colon after if/for/while/def statements",
        "Unmatched parentheses, brackets, or quotes",
        "Incorrect indentation (Python is picky about spaces)",
        "Using = instead of == for comparisons"
      ],
      "recognitionPatterns": [
        "SyntaxError: invalid syntax",
        "SyntaxError: EOL while scanning string literal",
        "SyntaxError: unexpected EOF while parsing"
      ],
      "studentExplanation": "Python is like a very picky English teacher - it needs perfect 'grammar' (syntax) to understand your code. Don't worry, the error message tells you exactly where the problem is!",
      "immediateHelp": [
        "🔍 Look at the line number in the error message",
        "🔍 Check for missing colons (:) at the end of if/for/while lines", 
        "🔍 Count your opening and closing parentheses/quotes",
        "🔍 Make sure indentation is consistent (use same number of spaces)"
      ],
      "detailedSolutions": [
        {
          "issue": "Missing colon",
          "example": {
            "wrong": "if age > 18\n    print('Adult')",
            "right": "if age > 18:\n    print('Adult')",
            "explanation": "Python needs a colon (:) to know where the condition ends and the action begins"
          }
        },
        {
          "issue": "Unmatched quotes",
          "example": {
            "wrong": "name = input('What is your name?)",
            "right": "name = input('What is your name?')",
            "explanation": "Every opening quote needs a matching closing quote"
          }
        },
        {
          "issue": "Missing parentheses",
          "example": {
            "wrong": "print 'Hello World'",
            "right": "print('Hello World')",
            "explanation": "Functions in Python need parentheses, even if they're empty"
          }
        }
      ],
      "preventionTips": [
        "Use a code editor that highlights matching brackets/quotes",
        "Write one line at a time and test frequently",
        "Read your code out loud - missing punctuation often 'sounds' wrong"
      ]
    },
    "NameError": {
      "frequency": 5,
      "severity": "high",
      "studentFriendlyName": "Unknown Variable",
      "analogy": "Like trying to call someone whose number isn't in your phone contacts yet!",
      "commonCauses": [
        "Using a variable before defining it",
        "Typos in variable names",
        "Case sensitivity issues (myName vs myname)",
        "Using variables outside their scope"
      ],
      "recognitionPatterns": [
        "NameError: name '...' is not defined",
        "NameError: global name '...' is not defined"
      ],
      "studentExplanation": "Python doesn't recognize the variable name you're trying to use. It's like trying to text someone who isn't in your contacts - you need to add them first!",
      "immediateHelp": [
        "🔍 Check if you created the variable before using it",
        "🔍 Look for typos in the variable name",
        "🔍 Make sure capitalization matches exactly",
        "🔍 Verify you're using the variable in the right place"
      ],
      "detailedSolutions": [
        {
          "issue": "Variable used before definition",
          "example": {
            "wrong": "print(student_name)\nstudent_name = 'Alex'",
            "right": "student_name = 'Alex'\nprint(student_name)",
            "explanation": "You must create (assign) a variable before you can use it"
          }
        },
        {
          "issue": "Typo in variable name",
          "example": {
            "wrong": "my_name = 'Sam'\nprint(myname)",
            "right": "my_name = 'Sam'\nprint(my_name)",
            "explanation": "Variable names must match exactly - Python sees 'my_name' and 'myname' as completely different"
          }
        }
      ],
      "preventionTips": [
        "Use descriptive variable names that are hard to misspell",
        "Define all variables at the top of your program when possible",
        "Use consistent naming conventions (snake_case or camelCase)"
      ]
    },
    "TypeError": {
      "frequency": 6,
      "severity": "medium",
      "studentFriendlyName": "Wrong Data Type",
      "analogy": "Like trying to add apples + oranges - they're both fruit, but you can't do math with different types!",
      "commonCauses": [
        "Trying to do math with strings (text)",
        "Concatenating strings and numbers without conversion",
        "Using wrong operations for data types",
        "Forgetting to convert input() to numbers"
      ],
      "recognitionPatterns": [
        "TypeError: unsupported operand type(s)",
        "TypeError: can't multiply sequence by non-int",
        "TypeError: must be str, not int"
      ],
      "studentExplanation": "You're trying to do something with the wrong type of data. It's like trying to do math with words - Python needs numbers for math and text for text operations!",
      "immediateHelp": [
        "🔍 Check if you're doing math with text (strings)",
        "🔍 Remember: input() always gives you text, even if user types numbers",
        "🔍 Use int() or float() to convert text to numbers",
        "🔍 Use str() to convert numbers to text"
      ],
      "detailedSolutions": [
        {
          "issue": "Math with strings",
          "example": {
            "wrong": "age = input('Age: ')\nnext_year = age + 1",
            "right": "age = int(input('Age: '))\nnext_year = age + 1",
            "explanation": "input() gives you text ('18'), but you need a number (18) for math"
          }
        },
        {
          "issue": "String concatenation",
          "example": {
            "wrong": "name = 'Alex'\nage = 16\nprint(name + age)",
            "right": "name = 'Alex'\nage = 16\nprint(name + str(age))",
            "explanation": "To combine text and numbers, convert the number to text first"
          }
        }
      ],
      "preventionTips": [
        "Always convert input() to the right type immediately",
        "Use f-strings for mixing text and numbers: f'Age: {age}'",
        "Think about what type of data each variable should hold"
      ]
    },
    "IndentationError": {
      "frequency": 3,
      "severity": "medium",
      "studentFriendlyName": "Spacing Problem",
      "analogy": "Like paragraphs in an essay - Python uses indentation to understand which code belongs together!",
      "commonCauses": [
        "Inconsistent spacing (mixing tabs and spaces)",
        "Missing indentation after if/for/while/def",
        "Wrong amount of indentation",
        "Extra indentation where none is needed"
      ],
      "recognitionPatterns": [
        "IndentationError: expected an indented block",
        "IndentationError: unindent does not match any outer indentation level"
      ],
      "studentExplanation": "Python uses indentation (spacing) like paragraphs in an essay to understand which code belongs together. Everything inside an if/for/while block needs to be indented the same amount!",
      "immediateHelp": [
        "🔍 Make sure code inside if/for/while blocks is indented",
        "🔍 Use exactly 4 spaces for each level of indentation",
        "🔍 Don't mix tabs and spaces - pick one and stick with it",
        "🔍 Make sure all lines at the same level have the same indentation"
      ],
      "detailedSolutions": [
        {
          "issue": "Missing indentation",
          "example": {
            "wrong": "if age > 18:\nprint('Adult')",
            "right": "if age > 18:\n    print('Adult')",
            "explanation": "Code inside the if block must be indented (usually 4 spaces)"
          }
        },
        {
          "issue": "Inconsistent indentation",
          "example": {
            "wrong": "if age > 18:\n    print('Adult')\n  print('Old enough')",
            "right": "if age > 18:\n    print('Adult')\n    print('Old enough')",
            "explanation": "All lines at the same level must have exactly the same indentation"
          }
        }
      ],
      "preventionTips": [
        "Set your editor to show spaces/tabs visually",
        "Configure your editor to use 4 spaces for indentation",
        "Be consistent - if you start with spaces, always use spaces"
      ]
    }
  },
  "interventionTriggers": {
    "immediateHelp": {
      "errorCount": 2,
      "timeThreshold": "2 minutes",
      "action": "Show targeted error explanation and hint"
    },
    "escalatedHelp": {
      "errorCount": 4,
      "timeThreshold": "5 minutes", 
      "action": "Provide step-by-step debugging guide"
    },
    "teacherAlert": {
      "errorCount": 6,
      "timeThreshold": "10 minutes",
      "action": "Alert teacher for personal assistance"
    }
  }
}